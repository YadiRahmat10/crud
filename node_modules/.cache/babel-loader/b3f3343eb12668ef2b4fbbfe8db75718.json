{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\react\\\\src\\\\pages\\\\Employees.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Employee from '../components/Employee';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddEmployee from '../components/AddEmployee';\nimport EditEmployee from '../components/EditEmployee';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Employees() {\n  _s();\n\n  const [employees, setEmployees] = useState([{\n    id: 1,\n    name: 'Caleb' // role: 'YouTube Sensation',\n    // img: 'https://images.pexels.com/photos/3831645/pexels-photo-3831645.jpeg',\n\n  }, {\n    id: 2,\n    name: 'Sal',\n    role: 'Manager',\n    img: 'https://images.pexels.com/photos/3586798/pexels-photo-3586798.jpeg'\n  }, {\n    id: 3,\n    name: 'John',\n    role: 'Director of Eng.',\n    img: 'https://images.pexels.com/photos/2095582/pexels-photo-2095582.jpeg'\n  }, {\n    id: 4,\n    name: 'Melanie',\n    role: 'Software Engineer',\n    img: 'https://images.pexels.com/photos/3760583/pexels-photo-3760583.jpeg'\n  }, {\n    id: 5,\n    name: 'Corey',\n    role: 'The Devops Guy',\n    img: 'https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg'\n  }, {\n    id: 6,\n    name: 'Jake',\n    role: 'Senior',\n    img: 'https://images.pexels.com/photos/2225298/pexels-photo-2225298.jpeg'\n  }]);\n\n  function updateEmployee(id, newName, newRole) {\n    const updatedEmployees = employees.map(employee => {\n      if (id == employee.id) {\n        return { ...employee,\n          name: newName,\n          role: newRole\n        };\n      }\n\n      return employee;\n    });\n    setEmployees(updatedEmployees);\n  }\n\n  function newEmployee(name, role, img) {\n    const newEmployee = {\n      id: uuidv4(),\n      name: name,\n      role: role,\n      img: img\n    };\n    setEmployees([...employees, newEmployee]);\n  }\n\n  const showEmployees = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: showEmployees ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center\",\n        children: employees.map(employee => {\n          const editEmployee = /*#__PURE__*/_jsxDEV(EditEmployee, {\n            id: employee.id,\n            name: employee.name,\n            role: employee.role,\n            updateEmployee: updateEmployee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(Employee, {\n            id: employee.id,\n            name: employee.name,\n            role: employee.role,\n            img: employee.img,\n            editEmployee: editEmployee\n          }, employee.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AddEmployee, {\n        newEmployee: newEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You cannot see the employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"fnmJnDvg0kwhtXOs2BSYY2w1RJI=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["Employee","useState","v4","uuidv4","AddEmployee","EditEmployee","Header","Employees","employees","setEmployees","id","name","role","img","updateEmployee","newName","newRole","updatedEmployees","map","employee","newEmployee","showEmployees","editEmployee"],"sources":["D:/reactjs/react/src/pages/Employees.js"],"sourcesContent":["import '../index.css';\r\nimport Employee from '../components/Employee';\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport AddEmployee from '../components/AddEmployee';\r\nimport EditEmployee from '../components/EditEmployee';\r\nimport Header from '../components/Header';\r\n\r\nfunction Employees() {\r\n    const [employees, setEmployees] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'Caleb',\r\n            // role: 'YouTube Sensation',\r\n            // img: 'https://images.pexels.com/photos/3831645/pexels-photo-3831645.jpeg',\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sal',\r\n            role: 'Manager',\r\n            img: 'https://images.pexels.com/photos/3586798/pexels-photo-3586798.jpeg',\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'John',\r\n            role: 'Director of Eng.',\r\n            img: 'https://images.pexels.com/photos/2095582/pexels-photo-2095582.jpeg',\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Melanie',\r\n            role: 'Software Engineer',\r\n            img: 'https://images.pexels.com/photos/3760583/pexels-photo-3760583.jpeg',\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Corey',\r\n            role: 'The Devops Guy',\r\n            img: 'https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg',\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Jake',\r\n            role: 'Senior',\r\n            img: 'https://images.pexels.com/photos/2225298/pexels-photo-2225298.jpeg',\r\n        },\r\n    ]);\r\n\r\n    function updateEmployee(id, newName, newRole) {\r\n        const updatedEmployees = employees.map((employee) => {\r\n            if (id == employee.id) {\r\n                return { ...employee, name: newName, role: newRole };\r\n            }\r\n\r\n            return employee;\r\n        });\r\n        setEmployees(updatedEmployees);\r\n    }\r\n\r\n    function newEmployee(name, role, img) {\r\n        const newEmployee = {\r\n            id: uuidv4(),\r\n            name: name,\r\n            role: role,\r\n            img: img,\r\n        };\r\n        setEmployees([...employees, newEmployee]);\r\n    }\r\n\r\n    const showEmployees = true;\r\n    return (\r\n        <div className=\"\">\r\n            {showEmployees ? (\r\n                <>\r\n                    <div className=\"flex flex-wrap justify-center\">\r\n                        {employees.map((employee) => {\r\n                            const editEmployee = (\r\n                                <EditEmployee\r\n                                    id={employee.id}\r\n                                    name={employee.name}\r\n                                    role={employee.role}\r\n                                    updateEmployee={updateEmployee}\r\n                                />\r\n                            );\r\n                            return (\r\n                                <Employee\r\n                                    key={employee.id}\r\n                                    id={employee.id}\r\n                                    name={employee.name}\r\n                                    role={employee.role}\r\n                                    img={employee.img}\r\n                                    editEmployee={editEmployee}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <AddEmployee newEmployee={newEmployee} />\r\n                </>\r\n            ) : (\r\n                <p>You cannot see the employees</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Employees;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}